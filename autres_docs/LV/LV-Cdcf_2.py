"""

Auteur: 
Nom du projet: LV-Cdcf_2
Description: Commande combinatoire de la vitre du coté passager :
Lorsque le passager soulève le bouton de commande (entrée bpmp) cela doit provoquer la montée (sortie M) de la vitre par l’intermédiaire d’un motoréducteur, et lorsqu’il appuie sur ce même bouton (entrée bpdp) cela doit provoquer la descente (sortie D) de la vitre. La vitre du coté passager doit également pouvoir être commandée depuis le coté chauffeur par les entrées bpmc et bpdc.

La montée comme la descente doivent s’arrêter lorsque la vitre arrive en fin de course (entrée fdc).
Mode: vittascience
Blocks: <xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id=".(l4y=n:57U5Q=k?yhSc">Bpmc</variable><variable id="Bvu)L{rh31~sod%m8X5+">Bpmp</variable><variable id="%-xP:y6qI8N?Bbt@z49]">Bpdc</variable><variable id="~LW)wxFBb]%epyYo~+?o">Bpdp</variable><variable id="z4CET-C~,voGHB$~6_xp">Fdc</variable></variables><block type="on_start" id="G[=T#8yqB70`NFgYq}GP" deletable="false" x="-2088" y="-513"></block><block type="forever" id="P$%]Ql4kyUZb4Grg(Voe" x="-2088" y="-363"><statement name="DO"><block type="variables_set" id="O!_K$8UzT]}@T$eVEWk@"><field name="VAR" id=".(l4y=n:57U5Q=k?yhSc">Bpmc</field><value name="VALUE"><shadow type="math_number" id="#{I-G*K[7[TwU2#^/7Sn"><field name="NUM">0</field></shadow><block type="io_readDigitalPin" id="u3t?d*[L3fu_`Y-dB%K}"><field name="PIN">pin5</field></block></value><next><block type="variables_set" id="1ii|=+3SYzy.c|MAM]8*"><field name="VAR" id="Bvu)L{rh31~sod%m8X5+">Bpmp</field><value name="VALUE"><shadow type="math_number" id="v(]5kuN[uH|C,`G0S]0*"><field name="NUM">0</field></shadow><block type="io_readDigitalPin" id="{ju3jlfkLMxvv~08C)|:"><field name="PIN">pin11</field></block></value><next><block type="variables_set" id="bqed5)Y#c@ep$p8wQIAO"><field name="VAR" id="%-xP:y6qI8N?Bbt@z49]">Bpdc</field><value name="VALUE"><shadow type="math_number" id="PYO8VZ[cH36S8$3S~k|~"><field name="NUM">0</field></shadow><block type="io_readDigitalPin" id="l#f*^O,.P1jE$oBHuB9X"><field name="PIN">pin0</field></block></value><next><block type="variables_set" id="YRf$g!q@O?O:I)sHL7$X"><field name="VAR" id="~LW)wxFBb]%epyYo~+?o">Bpdp</field><value name="VALUE"><shadow type="math_number" id="0g:3NifWbx.aq*rADDY^"><field name="NUM">0</field></shadow><block type="io_readDigitalPin" id="(E2O0YG?$Ge_))6;4P}v"><field name="PIN">pin1</field></block></value><next><block type="variables_set" id="ml)^=Z)p[[`{Gx`}Fwvq"><field name="VAR" id="z4CET-C~,voGHB$~6_xp">Fdc</field><value name="VALUE"><shadow type="math_number" id="+OeBg#aLRq52iqC*0iDK"><field name="NUM">0</field></shadow><block type="io_readDigitalPin" id="L~TE`HmZ$$#$ct.jzqsb"><field name="PIN">pin2</field></block></value><next><block type="controls_if" id="n||L^jl:GnCs1/Q,pfx["><mutation elseif="1" else="1"></mutation><value name="IF0"><block type="logic_operation" id=".KED8H,,U1)=`c2?nG)D"><field name="OP">AND</field><value name="A"><block type="logic_negate" id="Z9^%K_y|#!_QWTXNUTm_"><value name="BOOL"><block type="variables_get" id=";KE2QJ/8!{.p@J)R@NX9"><field name="VAR" id="z4CET-C~,voGHB$~6_xp">Fdc</field></block></value></block></value><value name="B"><block type="logic_operation" id="CId8vdn7TUa,0/XvE1I!"><field name="OP">OR</field><value name="A"><block type="logic_operation" id="zI[GW?Ij2^Nh#wXa!@wZ"><field name="OP">AND</field><value name="A"><block type="variables_get" id="cWC|BO4%9J{#FGP`@#4-"><field name="VAR" id="Bvu)L{rh31~sod%m8X5+">Bpmp</field></block></value><value name="B"><block type="logic_negate" id="d8p6-r`2N:]~!8~UfFRQ"><value name="BOOL"><block type="variables_get" id="z)EQk*4xT(2O}-;Hb=20"><field name="VAR" id="~LW)wxFBb]%epyYo~+?o">Bpdp</field></block></value></block></value></block></value><value name="B"><block type="logic_operation" id="dUXuus7tz#M3I2k[_Nv("><field name="OP">AND</field><value name="A"><block type="variables_get" id="#Q_+VRi!`c/u@o$1^kX6"><field name="VAR" id=".(l4y=n:57U5Q=k?yhSc">Bpmc</field></block></value><value name="B"><block type="logic_negate" id="gC`CG3DQ/XI;M|K2Tx1W"><value name="BOOL"><block type="variables_get" id="lD?AOc2;mj$n)hIlVTpP"><field name="VAR" id="%-xP:y6qI8N?Bbt@z49]">Bpdc</field></block></value></block></value></block></value></block></value></block></value><statement name="DO0"><block type="show_leds" id="ovdAwo$V$QfnF|+bJq#t"><field name="LED00">FALSE</field><field name="LED01">FALSE</field><field name="LED02">TRUE</field><field name="LED03">FALSE</field><field name="LED04">FALSE</field><field name="LED10">FALSE</field><field name="LED11">TRUE</field><field name="LED12">TRUE</field><field name="LED13">TRUE</field><field name="LED14">FALSE</field><field name="LED20">TRUE</field><field name="LED21">FALSE</field><field name="LED22">TRUE</field><field name="LED23">FALSE</field><field name="LED24">TRUE</field><field name="LED30">FALSE</field><field name="LED31">FALSE</field><field name="LED32">TRUE</field><field name="LED33">FALSE</field><field name="LED34">FALSE</field><field name="LED40">FALSE</field><field name="LED41">FALSE</field><field name="LED42">TRUE</field><field name="LED43">FALSE</field><field name="LED44">FALSE</field></block></statement><value name="IF1"><block type="logic_operation" id="b(W3|4|+pE,PPpFbsl)5"><field name="OP">AND</field><value name="A"><block type="logic_negate" id="Nj5dG|7~WxeABITd?Z|y"><value name="BOOL"><block type="variables_get" id="Ne^Fyi{34B^XGGzBF%#X"><field name="VAR" id="z4CET-C~,voGHB$~6_xp">Fdc</field></block></value></block></value><value name="B"><block type="logic_operation" id="TTIxHk`vFxTxkgW]P2UX"><field name="OP">OR</field><value name="A"><block type="logic_operation" id="8Bp8%CKzu|4zHWBkh-wo"><field name="OP">AND</field><value name="A"><block type="variables_get" id="S3IM]w]lu~nHRQJ$8/*("><field name="VAR" id="~LW)wxFBb]%epyYo~+?o">Bpdp</field></block></value><value name="B"><block type="logic_negate" id="%GMz@=;8ZRmAfxJ!sliK"><value name="BOOL"><block type="variables_get" id="rFNA_jBBKa7?V=U;S1/o"><field name="VAR" id="Bvu)L{rh31~sod%m8X5+">Bpmp</field></block></value></block></value></block></value><value name="B"><block type="logic_operation" id="Qz?vWKL3MY%xysG0gF03"><field name="OP">AND</field><value name="A"><block type="variables_get" id="5XAIH,tw9}NyXSk/PwoZ"><field name="VAR" id="%-xP:y6qI8N?Bbt@z49]">Bpdc</field></block></value><value name="B"><block type="logic_negate" id="k7TMSj$]%0u4^0{P5UF+"><value name="BOOL"><block type="variables_get" id="/Tbw!4KZMn|}DOl@*(z|"><field name="VAR" id=".(l4y=n:57U5Q=k?yhSc">Bpmc</field></block></value></block></value></block></value></block></value></block></value><statement name="DO1"><block type="show_leds" id="fOt8ut#!bI(-s{;1@0M}"><field name="LED00">FALSE</field><field name="LED01">FALSE</field><field name="LED02">TRUE</field><field name="LED03">FALSE</field><field name="LED04">FALSE</field><field name="LED10">FALSE</field><field name="LED11">FALSE</field><field name="LED12">TRUE</field><field name="LED13">FALSE</field><field name="LED14">FALSE</field><field name="LED20">TRUE</field><field name="LED21">FALSE</field><field name="LED22">TRUE</field><field name="LED23">FALSE</field><field name="LED24">TRUE</field><field name="LED30">FALSE</field><field name="LED31">TRUE</field><field name="LED32">TRUE</field><field name="LED33">TRUE</field><field name="LED34">FALSE</field><field name="LED40">FALSE</field><field name="LED41">FALSE</field><field name="LED42">TRUE</field><field name="LED43">FALSE</field><field name="LED44">FALSE</field></block></statement><statement name="ELSE"><block type="show_icon" id="REa3tAPDS|{7#2d5iXoj"><field name="ICON">NO</field></block></statement></block></next></block></next></block></next></block></next></block></next></block></statement></block></xml>

Projet généré par Vittascience.

Il contient le code python ainsi que le code blocs, et peut être importé
sur l'interface http://vittascience.com/microbit

"""

from microbit import *

while True:
  Bpmc = pin5.read_digital()
  Bpmp = pin11.read_digital()
  Bpdc = pin0.read_digital()
  Bpdp = pin1.read_digital()
  Fdc = pin2.read_digital()
  if not Fdc and (Bpmp and not Bpdp or Bpmc and not Bpdc):
    led_image = Image('00900:09990:90909:00900:00900')
    display.show(led_image)
  elif not Fdc and (Bpdp and not Bpmp or Bpdc and not Bpmc):
    led_image = Image('00900:00900:90909:09990:00900')
    display.show(led_image)
  else:
    display.show(Image.NO)
